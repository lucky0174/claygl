define(function () {
return "@export qtek.deferred.point_light\n\n@import qtek.deferred.chunk.light_head\n\n@import qtek.util.calculate_attenuation\n\n@import qtek.deferred.chunk.light_equation\n\nuniform vec3 lightPosition;\nuniform vec3 lightColor;\nuniform float lightRange;\n\nuniform vec3 eyePosition;\n\nvarying vec3 v_Position;\n\nvoid main()\n{\n    @import qtek.deferred.chunk.gbuffer_read\n\n    vec3 L = lightPosition - position;\n    vec3 V = normalize(eyePosition - position);\n\n    float dist = length(L);\n    L /= dist;\n\n    vec3 H = normalize(L + V);\n\n    float ndl = clamp(dot(N, L), 0.0, 1.0);\n    float ndh = clamp(dot(N, H), 0.0, 1.0);\n    float attenuation = lightAttenuation(dist, lightRange);\n    // Diffuse term\n    gl_FragColor.rgb = lightColor * ndl * attenuation;\n    if (dot(gl_FragColor.rgb, vec3(1.0)) == 0.0) // Reduce blending\n    {\n        discard;\n    }\n    // // Specular luminance\n    gl_FragColor.a = dot(LUM, gl_FragColor.rgb * D_Phong(glossiness, ndh));\n}\n@end";
});