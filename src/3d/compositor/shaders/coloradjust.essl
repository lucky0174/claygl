@export buildin.compositor.coloradjust

varying vec2 v_Texcoord;
uniform sampler2D texture;

uniform float brightness : 0.0;
uniform float contrast : 1.0;
uniform float exposure : 0.0;
uniform float gamma : 1.0;
uniform float saturation : 1.0;

// Values from "Graphics Shaders: Theory and Practice" by Bailey and Cunningham
const vec3 w = vec3(0.2125, 0.7154, 0.0721);

void main()
{
    vec4 tex = texture2D( texture, v_Texcoord);

    // brightness
    gl_FragColor.xyz = tex.rgb + vec3(brightness);
    // contrast
    gl_FragColor.xyz = (gl_FragColor.xyz-vec3(0.5))*contrast+vec3(0.5);
    // exposure
    gl_FragColor.xyz = gl_FragColor.xyz * pow(2.0, exposure);
    // gamma
    gl_FragColor.xyz = pow(gl_FragColor.xyz, vec3(gamma));
    // saturation
    float luminance = dot( gl_FragColor.xyz, w );
    gl_FragColor.xyz = mix(vec3(luminance), gl_FragColor.xyz, saturation);

    gl_FragColor.w = tex.w;
}

@end